{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friendList/FriendList.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","url","name","tag","location","stats","className","style","profile","description","src","alt","avatar","item","label","quantity","followers","views","likes","randomRgbColor","r","Math","round","random","g","b","Statistics","title","statistics","statList","map","id","percentage","backgroundColor","FriendList","friends","items","isOnline","status","width","TransactionHistory","transaction","type","amount","currency","App","userData","statisticsData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4554d5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2VM8b\",\"description\":\"Profile_description__15Z3A\",\"avatar\":\"Profile_avatar__27k2E\",\"name\":\"Profile_name__UTi5J\",\"tag\":\"Profile_tag__1WSAF\",\"location\":\"Profile_location__2iOGF\",\"stats\":\"Profile_stats__2NWYr\",\"item\":\"Profile_item__Uhc4u\",\"label\":\"Profile_label__1CkjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"statList\":\"Statistics_statList__33tnY\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"FriendList_items__PWzRO\",\"status\":\"FriendList_status__2rjKl\",\"item\":\"FriendList_item__35ZZP\",\"avatar\":\"FriendList_avatar__NCrO8\",\"name\":\"FriendList_name__3BmYA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Profile.module.css'\n\n\nconst Profile = ({url, name, tag, location, stats}) => (\n        <div className={style.profile}>\n          <div className={style.description}>\n                <img\n                    src={url}\n                    alt=\"Аватар пользователя\"\n                    className={style.avatar}\n                />\n                <p className={style.name}>{name}</p>\n                <p className={style.tag}>{tag}</p>\n                <p className={style.location}>{location}</p>\n          </div>\n\n            <ul className={style.stats}>\n                <li className={style.item}>\n                    <span className={style.label}>Followers </span>\n                    <span className={style.quantity}>{stats.followers}</span>\n                </li>\n                <li className={style.item}>\n                    <span className={style.label}>Views </span>\n                    <span className={style.quantity}>{stats.views}</span>\n                </li>\n                <li className={style.item}>\n                    <span className={style.label}>Likes </span>\n                    <span className={style.quantity}>{stats.likes}</span>\n                </li>\n            </ul>\n        </div>\n);\n\nProfile.propTypes = {\n    url: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.objectOf(PropTypes.number).isRequired,\n\n};\n\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport style from './Statistics.module.css'\n\nconst randomRgbColor = () => { \n    const r = Math.round(Math.random() * 256);\n    const g = Math.round(Math.random() * 256);\n    const b = Math.round(Math.random() * 256);\n\n    return `rgb(${r},${g},${b})`\n};\n\nconst Statistics = ({title, stats }) => (\n    <section className={style.statistics}>\n        <h2 className={style.title}>{title}</h2>\n\n        <ul className={style.statList}>\n            {stats.map(({ id, label, percentage }) => (\n                <li className={style.item} style={{ backgroundColor: randomRgbColor() }} key={id}>\n                    <span className={style.label}>{label}</span>\n                    <span className={style.percentage}>{percentage}</span>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\nStatistics.propTypes = {\n    title: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n    })).isRequired,\n}\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FriendList.module.css'\n\nconst FriendList = ({friends}) => (\n    <ul className={style.items}>\n        {friends.map(({ id, avatar, name, isOnline }) => (\n          <li className={style.item} key={id}>\n            <span className={style.status} style={{\n              backgroundColor: isOnline ? 'rgb(0, 105, 0)' : 'rgb(253, 0, 0)'}}></span>\n            <img className={style.avatar} src={avatar} alt=\"\" width=\"48\" />\n            <p className={style.name}>{name}</p>\n          </li>\n        ))}\n    </ul>\n);\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        avatar: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        isOnline: PropTypes.bool.isRequired,        \n    })).isRequired,\n}\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TransactionHistory.css'\n\nconst TransactionHistory = ({transaction}) => (\n  <table className=\"transaction-history\">\n    <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        {transaction.map(({id, type, amount, currency}) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n    transaction: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n    })).isRequired,\n};\n\nexport default TransactionHistory;","import React from 'react';\n\nimport Profile from './profile/Profile';\nimport userData from \"../user.json\";\n\nimport Statistics from './statistics/Statistics';\nimport statisticsData from '../statistical-data.json';\n\nimport FriendList from './friendList/FriendList';\nimport friendsData from '../friends.json';\n\nimport TransactionHistory from \"./transactionHistory/TransactionHistory\";\nimport transactionData from \"../transactions.json\";\n\nconst App = () => {\n    return (\n      <>\n        <Profile\n         url={userData.avatar}\n         name={userData.name}\n         tag={userData.tag}\n         location={userData.location}\n         stats={userData.stats}/>\n\n        <Statistics\n          title={'Upload stats'}\n          stats={statisticsData} \n         />;\n        \n        <FriendList\n          friends = {friendsData}\n        />\n\n        <TransactionHistory \n          transaction = {transactionData}\n        />\n      </>    \n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}